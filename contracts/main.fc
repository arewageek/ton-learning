#include "./imports/stdlib.fc";

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    slice cs = in_msg.begin_parse();

    int flag = cs~load_uint(4);
    slice sender = cs~load_msg_addr();

    int op = in_msg_body~load_uint(32);

    if(op == 1){
        ;; counter logic will be placed here

        slice ds = get_data()begin_parse();
        int counterValue = ds~load_uint(32);
        
        set_data(begin_cell().store_uint(counterValue + 1, 32).store_slice(sender).end_cell());
    } 

}

(slice, int) get_latest_counter_data() method_id {
    slice ds = get_data().begin_parse();

    int latestCount = ds~load_uint(32);
    slice latest_sender = ds~load_msg_addr();

    return (slice, int);
}
